<?php $_dld_color_title = Mage::helper('dailydeal')->getConfigSchemeColor(); ?>
<?php $_dld_color_coundown = Mage::helper('dailydeal')->getConfigCountdownColor(); ?>
<?php $_dld_color_lighight = Mage::helper('dailydeal')->getConfigHighlightColor(); ?> 
<?php
    function colourBrightnesstab($hex, $percent) {
    $hash = '';
    if (stristr($hex,'#')) {
        $hex = str_replace('#','',$hex);
        $hash = '#';
    }
    /// HEX TO RGB
    $rgb = array(hexdec(substr($hex,0,2)), hexdec(substr($hex,2,2)), hexdec(substr($hex,4,2)));
    //// CALCULATE
    for ($i=0; $i<3; $i++) {
        // See if brighter or darker
        if ($percent > 0) {
            // Lighter
            $rgb[$i] = round($rgb[$i] * $percent) + round(255 * (1-$percent));
        } else {
            // Darker
            $positivePercent = $percent - ($percent*2);
            $rgb[$i] = round($rgb[$i] * $positivePercent) + round(0 * (1-$positivePercent));
        }
        // In case rounding up causes us to go to 256
        if ($rgb[$i] > 255) {
            $rgb[$i] = 255;
        }
    }
    //// RBG to Hex
    $hex = '';
    for($i=0; $i < 3; $i++) {
        // Convert the decimal digit to hex
        $hexDigit = dechex($rgb[$i]);
        // Add a leading zero if necessary
        if(strlen($hexDigit) == 1) {
        $hexDigit = "0" . $hexDigit;
        }
        // Append to the hex string
        $hex .= $hexDigit;
    }
    return $hash.$hex;
}
?>

<style type="text/css">
    .tab-deal td.active a span ,
    .tab-deal td a:hover span{ background: <?php echo $_dld_color_title; ?>; background: <?php echo colourBrightnesstab($_dld_color_title,0.9);?> linear-gradient(to bottom, <?php echo colourBrightnesstab($_dld_color_title,0.9);?>, <?php echo colourBrightnesstab($_dld_color_title,-0.7);?>);}
    .tab-deal td.active a span span ,
    .tab-deal td a:hover span span{background: none;}
</style>
<table class="tab-deal">
    <tr>
        <td class="active">
            <a href="<?php echo Mage::helper('dailydeal')->getUrlHttp('dailydeal/index'); ?>">
                <span><span><?php echo $this->__('Featured Deal of the Day'); ?></span></span>
            </a>
        </td>
        <td >
            <a href="<?php echo Mage::helper('dailydeal')->getUrlHttp('dailydeal/index'); ?>">
                <span><span><?php echo $this->__('Current Deals'); ?></span></span>
            </a>
        </td>
        <td>
            <a href="<?php echo Mage::helper('dailydeal')->getUrlHttp('dailydeal/past'); ?>">
                <span><span><?php echo $this->__('Past Deals'); ?></span></span>
            </a>
        </td>
        <td>
            <a href="<?php echo Mage::helper('dailydeal')->getUrlHttp('dailydeal/comming'); ?>">
                <span><span><?php echo $this->__('Upcoming Deals'); ?></span></span>
            </a>
        </td>
    </tr>
</table>

<?php
/**
 * Product list template
 *
 * @see Mage_Catalog_Block_Product_List
 */
?>
<?php
$_activedealsCollection = $this->getActivedeals();
$_helper = $this->helper('catalog/output');
?>
<?php if (!$_activedealsCollection->count()): ?>
    <p class="note-msg"><?php echo $this->__('There are no products matching the selection.') ?></p>
<?php else: ?>
    <div class="category-products responsive-list list-actdeals">
        <?php echo $this->getToolbarHtml() ?>
        <?php // List mode ?>
        
        
        <?php $_iterator = 0; ?>
        <ol class="products-list" id="products-list">
            <?php foreach ($_activedealsCollection as $_activedeal): ?>
                <?php
                    $dealqty = $_activedeal->getDealQty();
                    $soldqty = $_activedeal->getSoldQty();
                    $_product = Mage::getModel('catalog/product')->load($_activedeal->getProductId());
                    Mage::unregister('product' );
                    Mage::register('product', $_product );
                    $product_view = Mage::app()->getLayout()->createBlock('catalog/product_view');
                ?>
                <li class="item<?php if (++$_iterator == sizeof($_activedealsCollection)): ?> last<?php endif; ?>">
                    <?php
                    /**
                     * Magento
                     *
                     * NOTICE OF LICENSE
                     *
                     * This source file is subject to the Academic Free License (AFL 3.0)
                     * that is bundled with this package in the file LICENSE_AFL.txt.
                     * It is also available through the world-wide-web at this URL:
                     * http://opensource.org/licenses/afl-3.0.php
                     * If you did not receive a copy of the license and are unable to
                     * obtain it through the world-wide-web, please send an email
                     * to license@magentocommerce.com so we can send you a copy immediately.
                     *
                     * DISCLAIMER
                     *
                     * Do not edit or add to this file if you wish to upgrade Magento to newer
                     * versions in the future. If you wish to customize Magento for your
                     * needs please refer to http://www.magentocommerce.com for more information.
                     *
                     * @category    design
                     * @package     base_default
                     * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
                     * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
                     */

                    /**
                     * Product view template
                     *
                     * @see Mage_Catalog_Block_Product_View
                     * @see Mage_Review_Block_Product_View
                     */
                    ?>
                    <?php $_helper = $this->helper('catalog/output'); ?>
                    
                    
                    <script type="text/javascript">
                        var optionsPrice = new Product.OptionsPrice(<?php echo $product_view->getJsonConfig() ?>);
                    </script>
                    <div id="messages_product_view"><?php echo $this->getMessagesBlock()->getGroupedHtml() ?></div>

                    <?php
                    $ajaxcart = themeOptions('ajaxcart');
                    $layout = themeOptions('productlayout');                                                      
                    ?>

                    
                    <div class="product-view">
                        <div class="product-essential">
                        <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
                            <div class="no-display">
                                <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
                                <input type="hidden" name="related_product" id="related-products-field" value="" />
                            </div>
                            <div class="view-name">
                            <div class="product-name">
                                    <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
                                </div>
                            </div>
                            <div class="horizontal-image product-img-box">
                                <?php echo $this->getChildHtml('media') ?>
                            </div>
                            <div class="horizontal-shop product-shop">
                                
                                <?php echo $this->getReviewsSummaryHtml($_product, false, true)?>
                                <?php echo $this->getChildHtml('alert_urls') ?>
                                <?php echo $this->getChildHtml('product_type_data') ?>
                                <?php echo $this->getTierPriceHtml() ?>
                                <?php echo $this->getChildHtml('extrahint') ?>
                                
                                                                
                                <?php if ($_product->getShortDescription()):?>
                                    <div class="short-description">
                                        <h2><?php echo $this->__('Quick Overview') ?></h2>
                                        <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
                                    </div>
                                <?php endif;?>
                                
                                       
                                <?php if (!$this->hasOptions()):?>
                                    <div class="add-to-box">
                                        <?php if($_product->isSaleable()): ?>
                                            <?php echo $this->getChildHtml('addtocart') ?>
                                            <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                                                <span class="or"><?php echo $this->__('OR') ?></span>
                                            <?php endif; ?>
                                        <?php endif; ?>
                                        <?php echo $this->getChildHtml('addto') ?>
                                    </div>
                                    <?php echo $this->getChildHtml('extra_buttons') ?>
                                <?php elseif (!$_product->isSaleable()): ?>
                                    <div class="add-to-box">
                                        <?php echo $this->getChildHtml('addto') ?>
                                    </div>
                                <?php endif; ?>

                                
                                <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                                <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
                                <?php endif;?>
                                
                                

                                <?php echo $this->getChildHtml('other');?>

                                <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                                    <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                                <?php endif;?>                                

                            </div>

                            
                            
                            <div class="clearer"></div>
                            
                        </form>
                        <script type="text/javascript">
                        //<![CDATA[
                            <?php if($ajaxcart == '1' || $ajaxcart == '2') { ?>
                            var productAddToCartForm = new VarienForm('product_addtocart_form');
                            productAddToCartForm.submit = function(button, url) {
                            if (this.validator.validate()) {
                                var form = this.form;
                                var oldUrl = form.action;
                                if (url) {
                                    form.action = url;
                                }
                                var e = null;
                                // Start of our new ajax code
                                if (!url) {
                                    url = jQuery('#product_addtocart_form').attr('action');
                                }
                                url = url.replace("checkout/cart","ajax/index"); // New Code
                                var data = jQuery('#product_addtocart_form').serialize();
                                data += '&isAjax=1';
                                
                                jQuery('#ajax_loader').show();
                                try {
                                    jQuery.ajax( {
                                        url : url,
                                        dataType : 'json',
                                        type : 'post',
                                        data : data,
                                        
                                        success : function(data) {
                                            //alert("dd");
                                            jQuery('#ajax_loader').hide();
                                            if(data.status == 'ERROR'){
                                                alert(data.message);
                                            }else{
                                                successMessage(data.message);
                                                if(jQuery('.block-cart')){
                                                jQuery('.block-cart').replaceWith(data.sidebar);
                                                }
                                                if(jQuery('.header .links')){
                                                jQuery('.header .links').replaceWith(data.toplink);
                                                }
                                            }
                                        },
                                        error: function(jqXHR, textStatus, errorThrown) {
                                            alert("Error posting Data");
                                        }
                                    });
                                } catch (e) {
                                }
                                // End of our new ajax code
                                this.form.action = oldUrl;
                                if (e) {
                                    throw e;
                                }
                            }
                        }.bind(productAddToCartForm);
                        
                        productAddToCartForm.submitLight = function(button, url){
                                if(this.validator) {
                                    var nv = Validation.methods;
                                    delete Validation.methods['required-entry'];
                                    delete Validation.methods['validate-one-required'];
                                    delete Validation.methods['validate-one-required-by-name'];
                                    if (this.validator.validate()) {
                                        if (url) {
                                            this.form.action = url;
                                        }
                                        this.form.submit();
                                    }
                                    Object.extend(Validation.methods, nv);
                                }
                            }.bind(productAddToCartForm);
                        
                        <?php } else { ?>
                        
                        var productAddToCartForm = new VarienForm('product_addtocart_form');
                            productAddToCartForm.submit = function(button, url) {
                                if (this.validator.validate()) {
                                    var form = this.form;
                                    var oldUrl = form.action;

                                    if (url) {
                                       form.action = url;
                                    }
                                    var e = null;
                                    try {
                                        this.form.submit();
                                    } catch (e) {
                                    }
                                    this.form.action = oldUrl;
                                    if (e) {
                                        throw e;
                                    }

                                    if (button && button != 'undefined') {
                                        button.disabled = true;
                                    }
                                }
                            }.bind(productAddToCartForm);

                            productAddToCartForm.submitLight = function(button, url){
                                if(this.validator) {
                                    var nv = Validation.methods;
                                    delete Validation.methods['required-entry'];
                                    delete Validation.methods['validate-one-required'];
                                    delete Validation.methods['validate-one-required-by-name'];
                                    // Remove custom datetime validators
                                    for (var methodName in Validation.methods) {
                                        if (methodName.match(/^validate-datetime-.*/i)) {
                                            delete Validation.methods[methodName];
                                        }
                                    }

                                    if (this.validator.validate()) {
                                        if (url) {
                                            this.form.action = url;
                                        }
                                        this.form.submit();
                                    }
                                    Object.extend(Validation.methods, nv);
                                }
                            }.bind(productAddToCartForm);
                        
                        <?php } ?>
                        //]]>
                        </script>
                        </div>

                        <div class="product-collateral">
                             <?php echo $this->getChildHtml('info_tabs') ?>
                              <?php echo $this->getChildHtml('upsell_products') ?>
                             <?php echo $this->getLayout()->createBlock('cms/block')->setBlockId('detail-block2')->toHtml() ?>
                        </div>
                    </div>


                    
                </li>
            <?php endforeach; ?>
        </ol>
        <script type="text/javascript">decorateList('products-list', 'none-recursive')</script>
        
    </div>
<?php endif; ?>